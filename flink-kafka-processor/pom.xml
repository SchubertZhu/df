<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>kappa-streaming</groupId>
    <artifactId>kappa-streaming</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>flink-kafka-processor</artifactId>

  <name>flink-kafka-processor</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <flink-connector-kafka>1.0.1</flink-connector-kafka>
    <flink-version>1.0.1</flink-version>
   <spring.version>4.2.4.RELEASE</spring.version>
    <spring.data.version>1.9.2.RELEASE</spring.data.version>
	<spring.data.cassandra.version>1.3.2.RELEASE</spring.data.cassandra.version>
    <org.slf4j.version>1.7.12</org.slf4j.version>
    <cassandra-driver-core.version>2.1.9</cassandra-driver-core.version>
    <cassandra-unit.version>2.1.9.2</cassandra-unit.version>
    <hector-core.version>2.0-0</hector-core.version>
    <guava.version>16.0.1</guava.version>
  </properties>


  <dependencies>
  
  <!-- flink jars -->
   	<dependency>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-java</artifactId>
		<version>${flink-version}</version>
	</dependency>
	<dependency>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-streaming-java_2.10</artifactId>
		<version>${flink-version}</version>
	</dependency>
	<dependency>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-clients_2.10</artifactId>
		<version>${flink-version}</version>
	</dependency>
	<dependency>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-runtime_2.10</artifactId>
		<version>${flink-version}</version>
	</dependency>
	
	<!-- flink connector jars - Don't use a SNAPSHOT version-->
	<dependency>
	  <groupId>org.apache.flink</groupId>
	  <artifactId>flink-connector-kafka-0.8_2.10</artifactId>
	  <version>${flink-connector-kafka}</version>
	</dependency>
	
	<!-- jackson databind -->
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.6.3</version>
	</dependency>
	
	<!-- Spring dependencies -->
	
	<dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-cassandra</artifactId>
      <version>${spring.data.cassandra.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hectorclient</groupId>
      <artifactId>hector-core</artifactId>
      <version>${hector-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.datastax.cassandra</groupId>
      <artifactId>cassandra-driver-core</artifactId>
      <version>${cassandra-driver-core.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${org.slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    

  </dependencies>

    <build>
    
      <plugins>
        <!-- We specify the Maven compiler plugin as we need to set it to Java 1.8 -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        
      <!-- jar with dependencies -->  
    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-assembly-plugin</artifactId>
		<version>2.4.1</version>
		<configuration>
			<!-- get all project dependencies -->
			<descriptorRefs>
				<descriptorRef>jar-with-dependencies</descriptorRef>
			</descriptorRefs>
			<!-- MainClass in mainfest make a executable jar -->
			<archive>
			  <manifest>
				<mainClass>io.example.flink.processor.KafkaReader</mainClass>
			  </manifest>
			</archive>

		</configuration>
		<executions>
		  <execution>
			<id>make-assembly</id>
                                      <!-- bind to the packaging phase -->
			<phase>package</phase> 
			<goals>
				<goal>single</goal>
			</goals>
		  </execution>
		</executions>
	</plugin>
      </plugins>
    
  </build>


</project>
